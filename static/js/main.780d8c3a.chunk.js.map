{"version":3,"sources":["components/GameTile.jsx","components/Popup.jsx","components/GameBoard.jsx","functions/fetchCredentials.jsx","App.js","reportWebVitals.js","index.js"],"names":["GameTile","props","className","highlighted","onClick","callbackFunc","x","y","occupied","icon","id","Popup","useState","show","setShow","useEffect","visible","style","visibility","opacity","title","message","challenge","onClickFunc","buttonText","AWS","require","popupData","GameBoard","position","setPosition","setError","tiles","setTiles","acceptNewMoves","setAcceptNewMoves","enableHighlights","setEnableHighlights","gameStatus","setGameStatus","invokeUrl","startGame","time","Date","now","dateFormat","Axios","post","headers","UserId","config","credentials","identityId","then","response","console","log","data","catch","err","submitMove","useCallback","newPosition","a","Promise","resolve","setTimeout","movePosition","error","finally","createBoard","tileArray","i","height","j","width","push","map","coords","gridTemplate","refreshCredentials","refreshPromise","expireTime","library","add","fab","faCrown","faFortAwesome","region","CognitoIdentityCredentials","IdentityPoolId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.780d8c3a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './GameTile.css';\r\n\r\nexport default function GameTile(props) {\r\n  function handleClick() {\r\n    if (!props.highlighted) {\r\n      return;\r\n    }\r\n    props.callbackFunc({ x: props.x, y: props.y });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`game-tile ${props.highlighted ? 'highlighted' : ''}`}\r\n      onClick={handleClick}\r\n    >\r\n      {props.occupied && <FontAwesomeIcon icon=\"crown\" id=\"crown-icon\" />}\r\n      {props.x === 0 && props.y === 0 && (\r\n        <FontAwesomeIcon\r\n          icon={['fab', 'fort-awesome']}\r\n          id=\"castle-icon\"\r\n          className={props.occupied ? 'captured' : ''}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Popup.css';\r\n\r\nexport default function Popup(props) {\r\n  const [show, setShow] = useState('false');\r\n\r\n  useEffect(() => {\r\n    setShow(props.visible);\r\n  }, [props.visible]);\r\n\r\n  function onButtonClicked() {\r\n    setShow(false);\r\n    props.onClickFunc();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"overlay\"\r\n      style={{\r\n        visibility: show ? 'visible' : 'hidden',\r\n        opacity: show ? '1' : '0',\r\n      }}\r\n    >\r\n      <div className=\"popup\">\r\n        <h2>{props.title}</h2>\r\n        <h4>{props.message}</h4>\r\n        <div>{props.challenge}</div>\r\n        <button onClick={onButtonClicked}>{props.buttonText}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\nimport GameTile from './GameTile';\r\nimport './GameBoard.css';\r\nimport Popup from './Popup';\r\n\r\nconst AWS = require('aws-sdk');\r\n\r\nconst popupData = {\r\n  player_victory: {\r\n    title: 'You won!',\r\n    message: 'Congratulations! You successfully beat the AI.',\r\n    challenge: 'Can you do it again?',\r\n    buttonText: 'Start New Game',\r\n  },\r\n  player_defeat: {\r\n    title: 'You lost!',\r\n    message: 'Come on, you were defeated by an AI...',\r\n    challenge: 'Give it another shot!',\r\n    buttonText: 'Start New Game',\r\n  },\r\n};\r\n\r\nexport default function GameBoard(props) {\r\n  const [position, setPosition] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [tiles, setTiles] = useState(null);\r\n  const [acceptNewMoves, setAcceptNewMoves] = useState(true);\r\n  const [enableHighlights, setEnableHighlights] = useState(true);\r\n  const [gameStatus, setGameStatus] = useState('IN_PROGRESS');\r\n\r\n  const invokeUrl = 'https://6k6fezitqe.execute-api.us-west-1.amazonaws.com/';\r\n\r\n  function startGame() {\r\n    var time = Date.now();\r\n    time = dateFormat(Date.now(), 'yyyymmdd\"T\"hhMMss\"Z\"');\r\n    Axios.post(\r\n      invokeUrl + 'startGame',\r\n      {},\r\n      {\r\n        headers: {\r\n          UserId: AWS.config.credentials.identityId,\r\n          'X-Amz-Date': time,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        console.log(response);\r\n        setPosition({\r\n          x: response.data.position.x,\r\n          y: response.data.position.y,\r\n        });\r\n        console.log(response.data.gameStatus);\r\n        setGameStatus(response.data.gameStatus);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setError(err);\r\n      });\r\n  }\r\n\r\n  const submitMove = useCallback(\r\n    async (newPosition) => {\r\n      if (!acceptNewMoves) {\r\n        return;\r\n      }\r\n      setEnableHighlights(false);\r\n      setAcceptNewMoves(false);\r\n      setPosition(newPosition);\r\n      await new Promise((resolve) => setTimeout(resolve, 300));\r\n      var time = Date.now();\r\n      time = dateFormat(Date.now(), 'yyyymmdd\"T\"hhMMss\"Z\"');\r\n      Axios.post(\r\n        invokeUrl + 'submitMove',\r\n        { movePosition: newPosition },\r\n        {\r\n          headers: {\r\n            UserId: AWS.config.credentials.identityId,\r\n            'X-Amz-Date': time,\r\n          },\r\n        }\r\n      )\r\n        .then(async (response) => {\r\n          console.log(response);\r\n          setError(null);\r\n          setPosition({\r\n            x: response.data.position.x,\r\n            y: response.data.position.y,\r\n          });\r\n          setAcceptNewMoves(true);\r\n          console.log(response.data.gameStatus);\r\n          setGameStatus(response.data.gameStatus);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setError(null);\r\n        })\r\n        .finally(setEnableHighlights(true));\r\n    },\r\n    [acceptNewMoves]\r\n  );\r\n\r\n  const createBoard = useCallback(() => {\r\n    let tileArray = [];\r\n    for (let i = props.height - 1; i >= 0; i--) {\r\n      for (let j = 0; j < props.width; j++) {\r\n        tileArray.push([j, i]);\r\n      }\r\n    }\r\n    setTiles(\r\n      tileArray.map((coords) => (\r\n        <GameTile\r\n          x={coords[0]}\r\n          y={coords[1]}\r\n          key={coords[1] * props.width + coords[0]}\r\n          highlighted={\r\n            enableHighlights &&\r\n            position &&\r\n            coords[0] <= position.x && // only highlight cells left of queen\r\n            coords[1] <= position.y && // only highlight cells below queen\r\n            (coords[0] === position.x || // highlight cells in same column as queen\r\n              coords[1] === position.y || // highlight cells in same row as queen\r\n              coords[0] - coords[1] === position.x - position.y) && // highlight cells diagonal from queen\r\n            !(coords[0] === position.x && coords[1] === position.y) // don't highlight queen\r\n          }\r\n          occupied={\r\n            position && coords[0] === position.x && coords[1] === position.y\r\n          }\r\n          callbackFunc={submitMove}\r\n        />\r\n      ))\r\n    );\r\n  }, [props.width, props.height, position, submitMove]);\r\n\r\n  useEffect(() => {\r\n    startGame();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    createBoard();\r\n  }, [position, createBoard]);\r\n\r\n  return (\r\n    <div\r\n      id=\"gameboard\"\r\n      style={{\r\n        gridTemplate:\r\n          'repeat(' +\r\n          props.height +\r\n          ', 1fr) / repeat(' +\r\n          props.width +\r\n          ', 1fr)',\r\n      }}\r\n    >\r\n      {tiles}\r\n\r\n      {gameStatus === 'PLAYER_VICTORY' ? (\r\n        <Popup\r\n          title={popupData.player_victory.title}\r\n          message={popupData.player_victory.message}\r\n          challenge={popupData.player_victory.challenge}\r\n          buttonText={popupData.player_victory.buttonText}\r\n          visible={true}\r\n          onClickFunc={startGame}\r\n        />\r\n      ) : gameStatus === 'PLAYER_DEFEAT' ? (\r\n        <Popup\r\n          title={popupData.player_defeat.title}\r\n          message={popupData.player_defeat.message}\r\n          challenge={popupData.player_defeat.challenge}\r\n          buttonText={popupData.player_defeat.buttonText}\r\n          visible={true}\r\n          onClickFunc={startGame}\r\n        />\r\n      ) : (\r\n        <Popup\r\n          title=\"\"\r\n          message=\"\"\r\n          challenge=\"\"\r\n          buttonText=\"\"\r\n          visible={false}\r\n          onClickFunc={null}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const AWS = require('aws-sdk');\r\n\r\nasync function refreshCredentials() {\r\n  await AWS.config.credentials.refreshPromise();\r\n  console.log(AWS.config.credentials);\r\n  // schedule the next credential refresh when they're about to expire\r\n  setTimeout(\r\n    refreshCredentials,\r\n    AWS.config.credentials.expireTime - new Date()\r\n  );\r\n}\r\n\r\nexport default function fetchCredentials() {\r\n  refreshCredentials();\r\n  console.log(AWS.config.credentials);\r\n}\r\n","import './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nimport { fab, faFortAwesome } from '@fortawesome/free-brands-svg-icons';\nimport GameBoard from './components/GameBoard';\nimport useFetchCredentials from './functions/fetchCredentials';\n\nlibrary.add(fab, faCrown, faFortAwesome);\n\nconst AWS = require('aws-sdk');\nAWS.config.region = 'us-west-1';\n\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n  IdentityPoolId: 'us-west-1:4f4c2491-7c42-4063-aad0-1ea855da82b9',\n});\n\nfunction App() {\n  useFetchCredentials();\n\n  return (\n    <div className=\"App container\">\n      <h1>Wythoff's Queen</h1>\n      <GameBoard width={25} height={25} />\n      <div className=\"container\">\n        <h2>How to Play:</h2>\n        <ul>\n          <li>You and the AI will alternate taking turns moving the queen.</li>\n          <li>\n            When moving the queen, each player may move the queen any number of\n            cells left, down, or diagonally left and down.\n          </li>\n          <li>The player that moves the queen to her castle wins.</li>\n        </ul>\n      </div>\n      <div className=\"container\">\n        <h2>Is this AI beatable?</h2>\n        <p>\n          Yes, this AI can be defeated using proper strategy. The challenge is\n          not in beating the AI once, but rather developing a strategy that\n          consistently beats the AI.{' '}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}